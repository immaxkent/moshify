/* Root & Universal Rules */

:root {
  --color-primary: #2584ff;
  --color-secondary: #00d9ff;
  --color-accent: #ff3400;
  --color-heading: #1b0760;
  --color-body: #918ca4;
  --color-border: #ccc;
  --border-radius: 30px;
  --color-body-darker: #5c5577;
}
*,
*::after,
*::before {
  box-sizing: border-box;
}

/* Colours & Typography */

html {
  font-size: 62.5%;
}

body {
  font-family: Inter, Arial, Helvetica, sans-serif;
  color: var(--color-body);
  font-size: 2.4rem;
  line-height: 1.5;
}

h1,
h2,
h3 {
  color: var(--color-heading);
  margin-bottom: 1rem;

  line-height: 7rem;
}

h1 {
  font-size: 7rem;
}
h2 {
  font-size: 4rem;
}
h3 {
  font-size: 3rem;
}
p {
  margin-top: 0;
}
@media screen and (min-width: 1024px) {
  body {
    font-size: 1.8rem;
  }
  h1 {
    font-size: 8rem;
  }
  h2 {
    font-size: 4rem;
  }
  h3 {
    font-size: 2.4rem;
  }
}

/* Links */
a {
  text-decoration: none;
}
.link-arrow {
  color: var(--color-accent);
  text-transform: uppercase;
  font-size: 2rem;
  font-weight: bold;
}
.link-arrow::after {
  content: "-->";
  margin-left: 5px;
  /* notice that this transition decleration is given in the section
where the content itself is defined*/
  transition: margin 0.15s;
}
.link-arrow:hover::after {
  margin-left: 10px;
}
@media screen and (min-width: 1024px) {
  .link-arrow {
    font-size: 1.5rem;
  }
}

/* Badges */

.badge {
  padding: 0.5rem 2rem;
  border-radius: var(--border-radius);
  font-weight: 600;
  white-space: nowrap;
  font-size: 2rem;
}
.badge--primary {
  background: var(--color-primary);
  color: #fff;
}
.badge--secondary {
  background: var(--color-secondary);
  color: #fff;
}
.badge--domain {
  background: none;
  color: #1b0760;
  font-weight: 800;
}
.card--secondary .badge--secondary {
  background: #02cdf1;
}
.badge--small {
  font-size: 1.6rem;
  padding: 0.5rem 1.5rem;
}
@media screen and (min-width: 1024px) {
  .badge {
    font-size: 1.5rem;
  }
  .badge--small {
    font-size: 1.2rem;
  }
}

/* Lists */

.list {
  list-style: none;
  padding-left: 0;
  color: var(--color-heading);
}
.list--inline .list__item {
  display: inline-block;
}
.list--tick {
  list-style-image: url(/images/tick.svg);
  padding-left: 3rem;
}
.list--tick .list__item {
  padding-left: 0.5rem;
  margin-bottom: 1rem;
}

@media screen and (min-width: 1024px) {
  .list--tick .list__item {
    padding-left: 0;
  }
}
/* Icons */

.icon {
  width: 40px;
  height: 40px;
}
.icon--primary {
  fill: var(--color-primary);
}
.icon--white {
  fill: #f3f3f3;
}
.icon--small {
  height: 30px;
  width: 30px;
}
.icon-container {
  background: #f3f9fa;
  width: 64px;
  height: 64px;
  border-radius: 100%;
  display: inline-flex;
  justify-content: center;
  align-items: center;
}
.testimonial .icon-container {
  background: var(--color-accent);
  width: 64px;
  height: 64px;
  border-radius: 100%;
  display: inline-flex;
  justify-content: center;
  align-items: center;
}
.icon-container--accent {
  background: var(--color-accent);
}

/* Buttons */

/*the first classification is the STRUCTURE, .btn - this should be seperated
from the SKINS which dynamically change depending on the use case and interaction
of the button */

.btn {
  border-radius: var(--border-radius);
  border: none;
  cursor: pointer;
  font-size: 1.8rem;
  font-weight: 600;
  margin: 1rem 1rem;
  padding: 2rem 3rem;
  text-transform: uppercase;
  text-align: center;
  white-space: nowrap;
  outline: 0;
}

/* thus, now we see the skins being defined. */

.btn .icon {
  width: rem;
  height: 2rem;
  margin-right: 1rem;
  vertical-align: middle;
}

.btn--primary {
  background-color: var(--color-primary);
  color: #fff;
}
.btn--primary:hover {
  background: #3a8ffd;
}
.btn--secondary {
  background-color: var(--color-secondary);
  color: #fff;
}
.btn--secondary:hover {
  background: #00c8eb;
}
.btn--accent {
  background: var(--color-accent);
  color: #fff;
}
.btn--accent:hover {
  background: #ec3000;
}

.btn--outline {
  background: none;
  border: 1px solid var(--color-heading);
  color: var(--color-heading);
}

.btn--long {
  padding-left: 8rem;
  padding-right: 8rem;
}

/*note that this structure/skin combination has been defined for
inline buttons. for block buttons, different structures are required,
as these buttons will be required to fill the container in 
which they are placed*/

.btn--block {
  width: 100%;
  display: inline-block;
}
.btn--stretched {
  padding-left: 8rem;
  padding-right: 8rem;
  padding-top: 1.5rem;
  padding-bottom: 1.5rem;
  margin-left: 0;
}

@media screen and (min-width: 1024px) {
  .btn {
    font-size: 1.5rem;
  }
}

/* Inputs */

.input {
  border-radius: 30px;
  border: 1px solid var(--color-border);
  color: var(--color-heading);
  /* margin: 1rem; */
  outline: 0;
  padding: 1.5rem 3rem;
  font-size: 2rem;
}
.input--group {
  border: 1px solid var(--color-border);
  border-radius: var(--border-radius);
  display: flex;
}
.input--group .input {
  border: 0;
  flex-grow: 1;
}
.input--group .btn {
  margin: 4px;
}
@media screen and (min-width: 1024px) {
  .input {
    font-size: 1.5rem;
  }
}
/* Cards */

.card {
  border-radius: 7px;
  box-shadow: 0 0 20px 10px #f3f3f3;
  overflow: hidden;
  /*
  padding: 1rem;
  */
}

.card__header,
.card__body {
  padding: 2rem 3rem;
}

.card--primary .card__header {
  background: var(--color-primary);
  color: white;
}
.card--secondary .card__header {
  background: var(--color-secondary);
  color: white;
}
/* Plan Construct */

.plan {
  box-shadow: 0 0 30px 5px #e6ebee;
  border-radius: 7px;
}
.plan__name {
  color: white;
  margin: 0;
  font-weight: 500;
  font-size: 2.4rem;
}
.plan__price {
  font-size: 6rem;
}
.plan__billing {
  font-size: 2.4rem;
  font-weight: 300;
  opacity: 0.8;
  margin-right: 1rem;
}
.plan__description {
  font-size: 2rem;
  font-weight: 300;
  letter-spacing: 1px;
  display: block;
}
.plan .list__item {
  margin-bottom: 2rem;
  letter-spacing: 1px;
}
.plan--popular {
  transform: scale(1.05);
}
.plan--popular .card__header {
  position: relative;
}
.plan--popular .card__header::before {
  content: url(/images/popular.svg);
  width: 40px;
  display: inline-block;
  position: absolute;
  top: -5px;
  right: 5%;
}
.plan:hover {
  transform: scale(1.05);
}
.plan--popular:hover {
  transform: scale(1.1);
}
@media screen and (min-width: 1024px) {
  .plan__name {
    font-size: 1.4rem;
  }
  .plan__price {
    font-size: 5rem;
  }
  .plan__billing {
    font-size: 1.6rem;
  }
}
/* Media Objects */
.media {
  display: flex;
}
.media__title {
  margin-top: 0;
}
.media__body {
  margin: 0rem 2rem;
}
.media__image {
  margin-top: 0.5rem;
}
/* Quotes */

.quote {
  font-size: 3rem;
  font-style: italic;
  color: var(--color-body-darker);
  line-height: 1.3;
}
.quote__text::before {
  content: open-quote;
}
.quote__text::after {
  content: close-quote;
}
.quote__footer .media {
  margin: 4rem;
}
.quote__footer .media__title {
  font-weight: 300;
  font-size: 3rem;
  letter-spacing: 1.5px;
  margin-bottom: none;
}
.media__description {
  opacity: 0.4;
  margin: none;
}

@media screen and (min-width: 1024px) {
  .quote {
    font-size: 2rem;
  }
  .media__title {
    font-size: 2.4rem;
  }
  .media__description {
    font-size: 1.6rem;
  }
}
/* Grids */
.grid {
  display: grid;
}
@media screen and (min-width: 768px) {
  .grid--1x2 {
    grid-template-columns: 1fr 1fr;
  }
  .grid--1x3 {
    grid-template-columns: 1fr 1fr 1fr;
  }
  .grid--1x2i {
    grid-template-columns: 1fr 250px;
  }
}
/* Testimonials */
/*
.testimonial {
  padding: 3rem;
}
.testimonial__image {
  position: relative;
}
.testimonial__image > .img {
  width: 100%;
}
.testimonial__image > .icon-container {
  position: absolute;
  top: 3rem;
  right: -32px;
}
.testimonial__block {
  width: 100%;
  height: 400px;
}
*/
.testimonial {
  padding: 3rem;
}
.testimonial__image {
  position: relative;
  width: 100%;
}
.testimonial__image > img {
  width: 100%;
}
.testimonial__image .icon-container {
  position: absolute;
  top: 3rem;
  right: -32px;
}
@media screen and (min-width: 768px) {
  .testimonial .quote,
  .testimonial .quote__author {
    font-size: 2.4rem;
  }
  .testimonial .quote {
    margin-left: 6rem;
  }
}
/* Callouts 

Here is my attempt: 

.callout {
  padding: 3rem 3rem;
}
.callout1 {
  height: 150px;
  background: var(--color-primary);
}
.callout2 {
  display: flex;
  justify-content: center;
  align-items: center;
  height: 150px;
  background: var(--color-primary);
}

.grid__callout {
  border-radius: 7px;
  overflow: hidden;
}

.callout1 > p,
.callout1 > h3 {
  font-size: 1.5rem;
  color: white;
}
.callout1 > h3 {
  padding-left: 3rem;
  padding-top: 1rem;
}
.callout1 > p {
  padding-left: 3rem;
  padding-right: 3rem;
}

*/

.callout {
  padding: 4rem;
  border-radius: 5px;
}
.callout--primary {
  background: var(--color-primary);
  color: #fff;
}
.callout__heading {
  color: #fff;
  margin-top: 0;
  font-size: 3rem;
}
.callout .btn {
  justify-self: center;
  align-self: center;
}
.callout__content {
  text-align: center;
}

@media screen and (min-width: 768px) {
  .callout .grid--1x2 {
    grid-template-columns: 1fr auto;
  }
  .callout__content {
    text-align: left;
  }
  .callout .btn {
    justify-self: start;
  }
}

/* Collapsibles */

.collapsible__header {
  display: flex;
  justify-content: space-between;
}
.collapsible__heading {
  margin-top: 0;
  font-size: 3rem;
}
.collapsible__chevron {
  transform: rotate(90deg);
  transition: transform 0.3s;
}
.collapsible__content {
  max-height: 0;
  overflow: hidden;
  transition: all 0.3s;
  opacity: 0;
}

.collapsible--expanded .collapsible__chevron {
  transform: rotate(0);
}
.collapsible--expanded .collapsible__content {
  max-height: 100vh;
  opacity: 1;
}

/* Block */

.block {
  --padding-vertical: 6rem;
  padding: var(--padding-vertical) 2rem;
}
.block__heading {
  margin-top: 0;
}
.block--dark {
  background: #000000;
  color: #7b858b;
}
.block--dark .block__heading {
  color: #fff;
}
.block--skewed-right {
  padding-bottom: calc(var(--padding-vertical) + 4rem);
  clip-path: polygon(100% 100%, 100% 0%, 0% 0%, 0% 90%);
}
.block--skewed-left {
  padding-bottom: calc(var(--padding-vertical) + 4rem);
  clip-path: polygon(0% 0%, 100% 0%, 100% 90%, 0% 100%);
}
.block__header {
  text-align: center;
}
.container {
  max-width: 1140px;
  margin: 0 auto;
}

/* Nav Bars */

.nav {
  background: #000;
  display: flex;
  justify-content: space-between;
  flex-wrap: wrap;
  padding: 0 1rem;
  align-items: center;
}
.nav__list {
  width: 100%;
  margin: 0;
}
.nav__item {
  padding: 0.5rem 2rem;
  border-bottom: 1px solid #222;
}
.nav__item > a {
  color: #d2d0db;
  transition: color 0.3s;
}
.nav__item > a:hover {
  color: #fff;
}
.nav__toggler {
  opacity: 0.5;
  transition: box-shadow 0.15s;
  cursor: pointer;
}

.nav.collapsible--expanded .nav__toggler {
  opacity: 1;
  box-shadow: 0 0 0 3px #666;
  border-radius: 5px;
}
.nav__brand {
  display: flex;
}
@media screen and (min-width: 768px) {
  .nav__toggler {
    display: none;
  }
  .nav__list {
    width: auto;
    display: flex;
    font-size: 1.6rem;
    max-height: 100%;
    opacity: 1;
  }
  .nav__item {
    border: 0;
  }
}

/* Hero 

here's my attempt:


.hero h1 {
  color: #fff;
}
.hero {
  text-align: center;
}
.hero img {
  width: 550px;
  display: flex;
  justify-content: center;
}

@media screen and (min-width: 768px) {
  .hero {
    text-align: left;
    display: flex;
    align-items: center;
  }
  .hero__div {
    width: 1140px;
    margin: 0 auto;
  }
  .hero .btn {
    margin-left: 0;
    margin-top: none;
  }
  .hero h1 {
    line-height: 8rem;
  }
  .hero p {
    letter-spacing: 2px;
  }
}

You found that THE KEY DIFFERENCE here was declaring the
image to take up 100% of the width of the containing 
element, instead of giving it an explicit width.

ALSO there was no need to wrap the grid elements inside a div 
to yield a cenetered distribution: this was rather done via use of 
the <header> element, which automatically centers the content.

*/

.hero__tagline {
  font-size: 2rem;
  color: #b9c3cf;
  letter-spacing: 2px;
  margin: 2rem 0 5rem;
}
.hero__image {
  width: 100%;
}
.hero {
  clip-path: polygon(0% 0%, 100% 0%, 100% 95%, 0% 100%);
}
.hero__content {
  margin-left: 5rem;
}

@media screen and (min-width: 768px) {
  .hero {
    padding-top: 0;
  }
  .hero__content {
    text-align: left;
    align-self: center;
  }
}

/* Domain Block 

here's my attempt;

.domain__badges {
  display: flex;
  justify-content: center;
}
.domain__badges > .badge--small {
  margin: 3rem 3rem 1rem 1rem;
}
.block__center {
  width: 700px;
  margin: 0 auto;
}
.block__center > .input--group {
  box-shadow: 0 0 20px lightgrey;
  border: none;
  margin-bottom: 2rem;
  margin-top: 5rem;
}
*/
.block__domain .input--group {
  box-shadow: 0 0 30px 20px #e6ebee;
  border: 0;
  margin: 4rem auto;
  max-width: 720px;
}
.domain--prices {
  display: grid;
  grid-template-columns: 1fr 1fr 1fr;
  grid-template-rows: 6rem 6rem;
  font-size: 2rem;
  font-weight: 600;
  max-width: 720px;
  margin: 0 auto;
}

@media screen and (min-width: 768px) {
  .domain--prices {
    grid-template-columns: repeat(auto-fit, minmax(10rem, 1fr));
    grid-template-rows: 6rem;
  }
}

/* Cards or 'Plans' */

.block--plans .grid {
  grid-gap: 4rem;
}
.block--plans .card,
.block--plans .plan {
  max-width: 600px;
  margin: 0 auto;
}
.plan {
  transition: transform 0.2s ease-out;
}

/* Features */

/* here's my code: 

.image-features--block {
  width: 100%;
}
.header__features {
  text-align: center;
  margin-bottom: 10rem;
}
.features .grid {
  grid-gap: 5rem;
  grid-row-gap: 10rem;
}
.features__grid h3 {
  margin-top: 0;
}
*/
/* Problems in this code section are;

images dont centre align, so during resizing of the 
browser windows the images seem out of line with the 
accompanying text

secondly, when the site is resized for mobile the images
appear in the incorrect order. likely, decleration
of grd space names is required to be able to construct
a media query for larger screens*/

.feature__heading {
  margin: 1rem 0;
}
.features--article {
  gap: 4rem 2rem;
  margin: 12rem 0;
}

.features__image {
  width: 100%;
}
.features--article div {
  padding: 3rem 3rem;
}

@media screen and (min-width: 768px) {
  .features--article:nth-of-type(even) .feature__content {
    order: 2;
  }
}

.feature-main--heading {
  text-align: center;
}

/* Showcase */
